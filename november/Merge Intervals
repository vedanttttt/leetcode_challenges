class Solution {
    public int[][] merge(int[][] intervals) {
        List<List<Integer>> res = new ArrayList<>();
        Arrays.sort(intervals,(a,b)->(a[0]-b[0]));
        
        int[] current = new int[2];
        current[0]=intervals[0][0];
        current[1]=intervals[0][1];
        
        for(int i=1;i<intervals.length;i++){
            if(intervals[i][0]>current[1]){
                List<Integer> l = new ArrayList<>();
                l.add(current[0]);
                l.add(current[1]);
                res.add(l);
                current[0]=intervals[i][0];
                current[1]=intervals[i][1];
            }
            else{
                current[1]=Math.max(current[1],intervals[i][1]);
            }
        }
        
        List<Integer> l = new ArrayList<>();
        l.add(current[0]);
        l.add(current[1]);
        res.add(l);
        
        int[][] arr = new int[res.size()][2];
        int c=0;
        for(List<Integer> list: res){
            arr[c][0]=list.get(0);
            arr[c][1]=list.get(1);
            c++;
        }
        
        return arr;
    }
}
