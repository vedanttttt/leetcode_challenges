class Solution {
    public List<List<Integer>> allPathsSourceTarget(int[][] graph) {
        List<List<Integer>> result = new ArrayList<>();
        Queue<List<Integer>> queue = new LinkedList<>();
        queue.add(Arrays.asList(0));
        
        int goal=graph.length-1;
        
        while(!queue.isEmpty()){
            List<Integer> path = queue.poll();
            int lastNode = path.get(path.size()-1);
            
            if(lastNode == goal)
                result.add(new ArrayList<>(path));
            else{
                int[] neighbours = graph[lastNode];
                for(int neighbour:neighbours){
                    List<Integer> list = new ArrayList<>(path);
                    list.add(neighbour);
                    queue.add(list);
                }
            }
        }
        return result;
    }
}
