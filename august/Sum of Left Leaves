/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int sum=0;
    public int sumOfLeftLeaves(TreeNode root) {
        if(root ==null)
            return 0;
        Stack<TreeNode> stack = new Stack<>();
        stack.add(root);
       // checkLeaf(root);
        while(!stack.isEmpty()){
            TreeNode temp = stack.pop();
            if(temp.right!=null)
                stack.push(temp.right);
            if(temp.left!=null){
                checkLeaf(temp.left);
                stack.push(temp.left);
            }
        }
        return sum;
    }
    
    public void checkLeaf(TreeNode temp){
        if(temp.left == null && temp.right == null)
            sum += temp.val;
    }
}
