/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode partition(ListNode head, int x) {
        if(head==null)
            return null;
        
        ListNode before_head= new ListNode(0);
        ListNode before = before_head;
        ListNode after_head= new ListNode(0);
        ListNode after = after_head;
        
        while(head!=null){
            if(head.val < x){
                before.next=head;
                before=before.next;
            }
            else{
                after.next=head;
                after=after.next;
            }
            
            head = head.next;
        }
        
        after.next=null;
        before.next= after_head.next;
        
        return before_head.next;
        
//         ListNode big = null;
//         ListNode temp=head;
        
//         while(temp.next != null){
//             if(big==null){
//                 if(temp.next.val >=x || temp.val >=x){
//                     big=temp;
//                 }
//                 else
//                     temp=temp.next;
//             }
//             else{
//                 if(temp.next.val < x){
//                     ListNode curr = temp.next;
//                     ListNode prev = big.next;
//                     big.next= curr;
//                     temp.next=curr.next;
//                     curr.next=prev;
//                     big = big.next;
//                 }
//                 else
//                     temp=temp.next;
//             }
//         }
        
//         return head;
    }
}
