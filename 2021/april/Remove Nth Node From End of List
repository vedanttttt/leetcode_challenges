/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode slow = head;
        ListNode fast = head;
        
        int counter=0;
        
        while(fast!=null){
            if(counter==n){
                slow = slow.next;
            }
            else{
                counter++;
            }
            fast=fast.next;    
        }
            
//         if(slow==head  && head.next==null){
//             head=head.next;
//             return head;
//         }
        
//         slow.next=slow.next.next;
        
        if(slow==head)
            return head.next;
        
        ListNode temp=head;
        while(temp.next !=slow){
            temp = temp.next;
        }
        
        temp.next = temp.next.next;
        
        return head;
    }
}
